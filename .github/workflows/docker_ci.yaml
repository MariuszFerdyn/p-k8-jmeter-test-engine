name: docker_ci

on:
  push:
    paths-ignore:
    - 'upwork-devs/**'
    branches:
    - github_actions

jobs:
  tests:
    name: Build and Push jmeter docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v1
      #   with:
      #     path: src/controller/docker-jmeter-c-icap
      #     dockerfile: src/controller/docker-jmeter-c-icap/Dockerfile
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      #     repository: ${{ github.repository_owner }}/p-k8-jmeter-test-engine-v1/jmeter-icap
      #     registry: docker.pkg.github.com
      #     tag_with_ref: true
      
      - name: Build, tag, and push image to github packages
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          REGISTRY: docker.pkg.github.com
          REPOSITORY: ${{ github.repository_owner }}/p-k8-jmeter-test-engine-v1/jmeter-icap
        run: |
          # Build a docker container and push it to ECR so that it can be deployed to K8s.
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f src/controller/docker-jmeter-c-icap/Dockerfile src/controller/docker-jmeter-c-icap/Dockerfile
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY/$REPOSITORY:$IMAGE_TAG"
          
      - name: Docker logout
        if: ${{ succeeded() || failed() }}
        run: docker logout
